// –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —Å–∫—Ä–∏–ø—Ç–∞
document.addEventListener('DOMContentLoaded', function() {
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã DOM
    const cityInput = document.getElementById('city-input'); // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
    const searchBtn = document.getElementById('search-btn'); // –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞
    const currentWeatherElement = document.getElementById('current-weather'); // –ë–ª–æ–∫ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
    const dailyForecastElement = document.getElementById('daily-forecast'); // –ë–ª–æ–∫ –ø—Ä–æ–≥–Ω–æ–∑–∞
    const temperatureChartCtx = document.getElementById('temperature-chart').getContext('2d'); // –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
    
    let temperatureChart = null; // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä –≥—Ä–∞—Ñ–∏–∫–∞

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ú–æ—Å–∫–≤—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    loadWeather('Moscow');

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–∏—Å–∫–∞
    searchBtn.addEventListener('click', function() {
        const city = cityInput.value.trim(); // –ü–æ–ª—É—á–∞–µ–º –∏ –æ—á–∏—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
        if (city) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ –Ω–µ –ø—É—Å—Ç–æ–µ
            loadWeather(city); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    cityInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∂–∞—Ç–∏–µ Enter
            const city = cityInput.value.trim();
            if (city) {
                loadWeather(city);
            }
        }
    });

    /**
     * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
     * @param {string} city - –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
     */
    function loadWeather(city) {
        fetchWeatherData(city)
            .then(data => {
                // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
                updateCurrentWeather(data.current);
                updateDailyForecast(data.daily);
                updateTemperatureChart(data.daily);
            })
            .catch(error => {
                console.error('Error fetching weather data:', error);
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            });
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ —Å API OpenWeatherMap
     * @param {string} city - –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
     * @returns {Promise} - –û–±–µ—â–∞–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–≥–æ–¥–µ
     */
    function fetchWeatherData(city) {
        // –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å - –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–æ—Ä–æ–¥–∞
        return fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric&lang=ru`)
            .then(response => {
                if (!response.ok) { // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ —É—Å–ø–µ—à–Ω—ã–π
                    throw new Error('City not found'); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
                }
                return response.json(); // –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç–∞
            })
            .then(currentData => {
                // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ –æ—Ç–≤–µ—Ç–∞
                const lat = currentData.coord.lat;
                const lon = currentData.coord.lon;
                
                // –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å - –ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
                return fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,hourly,alerts&appid=${API_KEY}&units=metric&lang=ru`)
                    .then(response => response.json())
                    .then(forecastData => {
                        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã –∏ –ø—Ä–æ–≥–Ω–æ–∑–∞
                        return {
                            current: {
                                ...currentData, // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –≥–æ—Ä–æ–¥–µ
                                ...forecastData.current // –¢–µ–∫—É—â–∏–µ –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                            },
                            daily: forecastData.daily.slice(0, 5) // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ 5 –¥–Ω–µ–π –ø—Ä–æ–≥–Ω–æ–∑–∞
                        };
                    });
            });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∞ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
     * @param {Object} data - –î–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥–µ
     */
    function updateCurrentWeather(data) {
        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const date = new Date(data.dt * 1000); // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º timestamp –≤ –¥–∞—Ç—É
        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
        const formattedDate = date.toLocaleDateString('ru-RU', options);
        
        // –ü–æ–ª—É—á–∞–µ–º URL –∏–∫–æ–Ω–∫–∏ –ø–æ–≥–æ–¥—ã
        const weatherIconUrl = `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –¥–ª—è –±–ª–æ–∫–∞ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
        currentWeatherElement.innerHTML = `
            <h2>${data.name}</h2> <!-- –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ -->
            <div>${formattedDate}</div> <!-- –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ -->
            <img src="${weatherIconUrl}" alt="${data.weather[0].description}" class="weather-icon">
            <div class="current-temp">${Math.round(data.temp)}¬∞C</div> <!-- –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ -->
            <div class="current-description">${data.weather[0].description}</div> <!-- –û–ø–∏—Å–∞–Ω–∏–µ -->
            <div class="current-details">
                <div class="detail-item">
                    <span class="detail-value">${Math.round(data.feels_like)}¬∞C</span>
                    <span class="detail-label">–û—â—É—â–∞–µ—Ç—Å—è</span>
                </div>
                <div class="detail-item">
                    <span class="detail-value">${data.humidity}%</span>
                    <span class="detail-label">–í–ª–∞–∂–Ω–æ—Å—Ç—å</span>
                </div>
                <div class="detail-item">
                    <span class="detail-value">${Math.round(data.wind_speed)} –º/—Å</span>
                    <span class="detail-label">–í–µ—Ç–µ—Ä</span>
                </div>
                <div class="detail-item">
                    <span class="detail-value">${data.pressure} hPa</span>
                    <span class="detail-label">–î–∞–≤–ª–µ–Ω–∏–µ</span>
                </div>
            </div>
        `;
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∞ —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º –Ω–∞ 5 –¥–Ω–µ–π
     * @param {Array} dailyData - –ú–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞
     */
    function updateDailyForecast(dailyData) {
        dailyForecastElement.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        
        // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è —Å–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
        dailyData.forEach(day => {
            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–Ω—è
            const date = new Date(day.dt * 1000);
            const options = { weekday: 'short', day: 'numeric', month: 'short' };
            const formattedDate = date.toLocaleDateString('ru-RU', options);
            
            // –ü–æ–ª—É—á–∞–µ–º URL –∏–∫–æ–Ω–∫–∏ –ø–æ–≥–æ–¥—ã
            const weatherIconUrl = `https://openweathermap.org/img/wn/${day.weather[0].icon}.png`;
            
            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
            const card = document.createElement('div');
            card.className = 'weather-card';
            card.innerHTML = `
                <div class="date">${formattedDate}</div> <!-- –î–∞—Ç–∞ -->
                <img src="${weatherIconUrl}" alt="${day.weather[0].description}" class="weather-icon">
                <div class="current-description">${day.weather[0].description}</div> <!-- –û–ø–∏—Å–∞–Ω–∏–µ -->
                <div>
                    <span class="temp-day">${Math.round(day.temp.day)}¬∞</span> / <!-- –î–Ω–µ–≤–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ -->
                    <span class="temp-night">${Math.round(day.temp.night)}¬∞</span> <!-- –ù–æ—á–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ -->
                </div>
                <div style="margin-top: 10px;">
                    <span>üíß ${day.humidity}%</span> | <!-- –í–ª–∞–∂–Ω–æ—Å—Ç—å -->
                    <span>üå¨Ô∏è ${Math.round(day.wind_speed)} –º/—Å</span> <!-- –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ -->
                </div>
            `;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            dailyForecastElement.appendChild(card);
        });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä
     * @param {Array} dailyData - –ú–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞
     */
    function updateTemperatureChart(dailyData) {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –æ—Å–∏ X (–¥–Ω–∏ –Ω–µ–¥–µ–ª–∏)
        const labels = dailyData.map(day => {
            const date = new Date(day.dt * 1000);
            return date.toLocaleDateString('ru-RU', { weekday: 'short' });
        });
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
        const dayTemps = dailyData.map(day => Math.round(day.temp.day)); // –î–Ω–µ–≤–Ω—ã–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        const nightTemps = dailyData.map(day => Math.round(day.temp.night)); // –ù–æ—á–Ω—ã–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        
        // –ï—Å–ª–∏ –≥—Ä–∞—Ñ–∏–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —É–Ω–∏—á—Ç–æ–∂–∞–µ–º –µ–≥–æ
        if (temperatureChart) {
            temperatureChart.destroy();
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –≥—Ä–∞—Ñ–∏–∫
        temperatureChart = new Chart(temperatureChartCtx, {
            type: 'line', // –¢–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞ - –ª–∏–Ω–µ–π–Ω—ã–π
            data: {
                labels: labels, // –ü–æ–¥–ø–∏—Å–∏ –æ—Å–∏ X
                datasets: [
                    { // –î–Ω–µ–≤–Ω—ã–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
                        label: '–î–Ω–µ–≤–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞',
                        data: dayTemps,
                        borderColor: '#e74c3c', // –ö—Ä–∞—Å–Ω–∞—è –ª–∏–Ω–∏—è
                        backgroundColor: 'rgba(231, 76, 60, 0.1)', // –°–≤–µ—Ç–ª–æ-–∫—Ä–∞—Å–Ω–∞—è –∑–∞–ª–∏–≤–∫–∞
                        tension: 0.3, // –°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ –ª–∏–Ω–∏–π
                        fill: true // –í–∫–ª—é—á–∏—Ç—å –∑–∞–ª–∏–≤–∫—É –ø–æ–¥ –ª–∏–Ω–∏–µ–π
                    },
                    { // –ù–æ—á–Ω—ã–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
                        label: '–ù–æ—á–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞',
                        data: nightTemps,
                        borderColor: '#3498db', // –°–∏–Ω—è—è –ª–∏–Ω–∏—è
                        backgroundColor: 'rgba(52, 152, 219, 0.1)', // –°–≤–µ—Ç–ª–æ-—Å–∏–Ω—è—è –∑–∞–ª–∏–≤–∫–∞
                        tension: 0.3,
                        fill: true
                    }
                ]
            },
            options: {
                responsive: true, // –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å
                plugins: {
                    title: { // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä–∞—Ñ–∏–∫–∞
                        display: true,
                        text: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–Ω–µ–º –∏ –Ω–æ—á—å—é (¬∞C)',
                        font: {
                            size: 16
                        }
                    },
                    legend: { // –õ–µ–≥–µ–Ω–¥–∞
                        position: 'top',
                    }
                },
                scales: {
                    y: { // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å–∏ Y
                        beginAtZero: false // –ù–µ –Ω–∞—á–∏–Ω–∞—Ç—å —Å –Ω—É–ª—è
                    }
                }
            }
        });
    }
});
